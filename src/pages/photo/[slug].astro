---
export async function getStaticPaths() {
  const { results: images } = await fetch(
    "https://jvphotography.pages.dev/api/gallery/images"
  )
    .then((res) => res.json())
    .catch((error) => console.log(error));

  interface Image {
    id: string;
    slug: string;
    name: string;
    tags: string;
    folder: string;
  }

  return images.map((image: Image) => {
    return {
      params: { slug: image.slug },
      props: { id: image.id },
    };
  });
}

import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

const { id } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/collection/*.{jpeg,jpg,png,gif}"
);
const imagePath = `/src/assets/images/collection/${id}.jpg`;

interface Image {
  id: string;
  slug: string;
  name: string;
  description: string;
  tags: string;
  date: string;
  location: string;
  thumbnail: string;
  image: string;
  folder: string;
}

const image: Image = await fetch(
  `https://jvphotography.pages.dev/api/gallery/image/${id}`
)
  .then((res) => res.json())
  .catch((error) => console.log(error));

function date(): string {
  const dateString: Date = new Date(image.date);
  const date: number = dateString.getDate();
  const day: string =
    date.toString() +
    (date === 1 || date === 21 || date === 31
      ? "st"
      : date === 2 || date === 22
        ? "nd"
        : date === 3 || date === 23
          ? "rd"
          : "th");
  const month: string = dateString.toLocaleString("default", { month: "long" });
  const year: string = dateString.getFullYear().toString();

  return `${day} ${month} ${year}`;
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="index, follow" />
    <link
      rel="preload"
      href="/assets/fonts/JosefinSlab-Regular.ttf"
      as="font"
    />
    <link rel="preload" href="/assets/fonts/Inter-Regular.ttf" as="font" />
    <link
      rel="preload"
      href="/assets/fonts/OverpassMono-Regular.ttf"
      as="font"
    />
    <title>{image.name} • JVPhotography</title>
    <meta name="author" content="Johnathan Verstraaten" />
    <meta name="description" content={image.description} />
    <meta property="og:title" content={`${image.name} • JVPhotography`} />
    <meta
      property="og:url"
      content={`https://jvphotography.pages.dev/photo/${image.slug}`}
    />
    <meta
      property="og:image"
      content={`https://jvphotography.pages.dev/assets/images/collection/${image.id}.jpg`}
    />
    <meta property="og:type" content="article" />
  </head>
  <body>
    <header>
      <a href="/">HOME</a>
      <a href="/gallery">GALLERY</a>
    </header>
    <article>
      <Image
        src={images[imagePath]()}
        alt={image.name}
        draggable="false"
        loading="lazy"
      />
      <div class="details">
        <h1>{image.name}</h1>
        <div>
          <span>
            <svg
              width="14"
              height="17"
              viewBox="0 0 14 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M6.8 17C6.8 17 13.6 10.5555 13.6 6.8C13.6 3.04446 10.5555 0 6.8 0C3.04446 0 0 3.04446 0 6.8C0 10.5555 6.8 17 6.8 17ZM8.5 6.8C8.5 5.86112 7.73889 5.1 6.8 5.1C5.86112 5.1 5.1 5.86112 5.1 6.8C5.1 7.73888 5.86112 8.5 6.8 8.5C7.73889 8.5 8.5 7.73888 8.5 6.8Z"
                fill="#737373"></path>
            </svg>
            {image.location}
          </span>
          <span>{date()}</span>
        </div>
      </div>
      <p>{image.description}</p>
    </article>
  </body>
</html>

<style is:global lang="scss">
  @use "../../styles/base";
  @use "../../styles/scrollbar";
</style>

<style lang="scss">
  @use "../../styles/font";
  @use "../../styles/color";

  body {
    padding-top: 6px;

    header {
      width: 100%;
      height: 50px;
      border-bottom: 1px solid color.$neutral500;
      display: flex;
      justify-content: center;
      align-items: center;

      a {
        font-family: font.$mono;
        color: color.$neutral600;
        margin: 0 20px;
        text-decoration: underline;
        text-decoration-color: transparent;
        text-underline-offset: 3px;
        transition: color 0.125s;
        display: flex;
        justify-content: center;
        position: relative;

        &::after {
          content: "";
          width: 0;
          height: 1px;
          position: absolute;
          bottom: 0;
          background-color: color.$neutral600;
          transition: 0.125s ease-in;
        }

        &:hover,
        &:focus {
          color: color.$primary600;

          &::after {
            width: 100%;
            background-color: color.$primary600;
            transition: 0.125s ease-in-out;
          }
        }
      }
    }

    article {
      width: 60%;
      max-width: 2000px;
      margin: 0 auto;
      padding: 100px 0;

      @media screen and (max-width: 1366px) {
        width: 80%;

        @media screen and (max-width: 768px) {
          padding: 80px 0;

          @media screen and (max-width: 620px) {
            padding: 60px 0;

            @media screen and (max-width: 460px) {
              padding: 50px 0;

              @media screen and (max-width: 360px) {
                width: 85%;
                padding: 40px 0;
              }
            }
          }
        }
      }

      img {
        width: 100%;
        height: auto;
        object-fit: cover;
        object-position: center;
        border-radius: 10px;
        box-shadow: 0 4px 20px 2px hsla(0, 0%, 0%, 25%);
      }

      .details {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        margin: 20px 0;
        font-family: font.$mono;
        flex-direction: column-reverse;

        h1 {
          font-size: 32px;
          color: color.$neutral700;
          font-family: font.$serifBold;

          @media screen and (max-width: 460px) {
            font-size: 28px;

            @media screen and (max-width: 360px) {
              font-size: 24px;
            }
          }
        }

        div {
          color: color.$neutral600;
          font-size: 14px;
          width: 100%;
          display: flex;
          justify-content: space-between;
          align-items: center;

          span:first-child {
            display: flex;
            align-items: center;

            svg {
              position: relative;
              margin-right: 7px;
              top: -2px;
              width: 10px;
              aspect-ratio: 14/17;
            }
          }

          @media screen and (max-width: 620px) {
            letter-spacing: -0.5px;

            @media screen and (max-width: 540px) {
              flex-direction: column-reverse;
              align-items: flex-start;

              span:first-child {
                margin-bottom: 4px;
              }

              span:last-child {
                margin-bottom: 4px;
              }

              @media screen and (max-width: 360px) {
                font-size: 12px;
              }
            }
          }
        }
      }

      p {
        width: fit-content;
        max-width: 100%;
        height: auto;
        color: color.$neutral600;
        font-style: italic;
        cursor: text;

        @media screen and (max-width: 360px) {
          font-size: 14px;
        }
      }
    }
  }
</style>
