---
const { results: folders } = await fetch(
  "https://jvphotography.pages.dev/functions/api/gallery/folders"
)
  .then((res) => res.json())
  .catch((error) => console.log(error));

interface Folder {
  id: string;
  slug: string;
  name: string;
}
---

<nav>
  <a href="/">
    <svg
      width="64"
      height="64"
      viewBox="0 0 64 64"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1 32.9986C1 32.9986 6.27036 30.752 11.8354 27.2895M11.8354 27.2895C19.2764 22.6598 27.2443 15.8562 23.8442 9.34273C20.8157 3.54115 11.9749 4.16828 8.34417 9.61329C4.30331 15.6734 7.23577 21.5084 11.8354 27.2895ZM11.8354 27.2895C14.5799 30.739 17.9179 34.1693 20.7223 37.6169M20.7223 37.6169C25.5713 43.5779 28.8248 49.5905 24.6558 55.8427C21.0957 61.182 12.9764 61.2694 9.15583 56.1133C3.45871 48.4247 10.4709 42.7625 20.7223 37.6169ZM20.7223 37.6169C27.7354 34.0967 36.2646 30.8182 43.2777 27.298M43.2777 27.298C53.5291 22.1524 60.5413 16.4903 54.8442 8.80163C51.0236 3.64551 42.9043 3.73294 39.3442 9.07218C35.1752 15.3244 38.4287 21.337 43.2777 27.298ZM43.2777 27.298C46.0821 30.7456 49.4201 34.1759 52.1646 37.6254M52.1646 37.6254C56.7642 43.4066 59.6967 49.2415 55.6558 55.3016C52.0251 60.7466 43.1843 61.3738 40.1558 55.5722C36.7557 49.0587 44.7236 42.2551 52.1646 37.6254ZM52.1646 37.6254C57.7296 34.1629 63 31.9164 63 31.9164"
        stroke="#5B5B5B"
        stroke-linecap="round"
        stroke-linejoin="round"></path>
    </svg>
  </a>
  <ul>
    <li>
      <input type="radio" name="folder" id="all" value="All Photos" checked />
      <label for="all">All Photos</label>
    </li>
    {
      folders.map((folder: Folder) => (
        <li>
          <input
            type="radio"
            name="folder"
            id={folder.slug}
            value={folder.name}
          />
          <label for={folder.slug}>{folder.name}</label>
        </li>
      ))
    }
  </ul>
</nav>

<style lang="scss">
  @use "../styles/font";
  @use "../styles/color";

  nav {
    position: fixed;
    top: 6px;
    left: 0;
    bottom: 0;
    width: 300px;
    padding: 0 30px;
    background-color: color.$neutral100;
    border-right: 1px solid color.$neutral400;
    z-index: 10;

    svg {
      width: 64px;
      height: 64px;
      display: block;
      margin: 40px auto 40px;
    }

    ul {
      list-style-type: none;

      li {
        width: 100%;
        cursor: pointer;

        &:not(:first-child) {
          margin-top: 12px;
        }

        input {
          opacity: 0;
          position: absolute;

          /*&:focus + label {
            outline: 1px dashed color.$neutral500;
          }*/

          &:checked + label {
            color: color.$primary500;

            &::before {
              width: 30px;
              background-color: color.$primary500;
            }
          }
        }

        label {
          padding: 3px 0;
          display: flex;
          align-items: center;
          height: 100%;
          width: 100%;
          font-family: font.$mono;
          font-size: 16px;
          color: color.$neutral600;
          line-height: 1;
          transition: color 0.125s;

          &::before {
            content: "";
            display: block;
            width: 15px;
            height: 1px;
            background-color: color.$neutral600;
            transition-property: background-color, width;
            transition-duration: 0.125s;
            margin-right: 10px;
          }

          &:hover {
            &::before {
              width: 30px;
            }
          }
        }
      }
    }
  }
</style>

<script>
  const folders = document.querySelectorAll(
    "input[name=folder]"
  ) as NodeListOf<HTMLInputElement>;
  const title = document.querySelector("#title") as HTMLElement;

  folders.forEach((folder) => {
    folder.addEventListener("click", () => {
      title.innerHTML = folder.value;
    });
  });
</script>
